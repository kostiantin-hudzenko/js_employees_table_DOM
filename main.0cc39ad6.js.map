{"version":3,"sources":["scripts/main.js"],"names":["special","thead","document","querySelector","tbody","toggleSwitch","trimmer","salary","replace","addEventListener","e","coords","target","pers","children","sort","a","b","textA","cellIndex","innerText","textB","localeCompare","reverse","append","classList","remove","parentElement","add","body","insertAdjacentHTML","form","forms","select","createRow","firstField","name","value","secondField","position","thirdField","fourthField","age","format","parseFloat","toLocaleString","showNotification","type","title","text","toUpperCase","notification","setTimeout","validity","valid","trim","preventDefault","reset","validScheme","length","item","targetCell","prevValue","normValue","targetInput","querySelectorAll","cloneNode","firstChild","replaceWith","focus","eventKey","key","blur","eventBlur","removeChild","toLowerCase","numb","textContent"],"mappings":"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","file":"main.0cc39ad6.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\n\nlet toggleSwitch = true;\n\nthead.addEventListener('click', (e) => {\n  const coords = e.target;\n  let pers = [...tbody.children];\n\n  pers.sort((a, b) => {\n    const textA = a.children[coords.cellIndex].innerText;\n    const textB = b.children[coords.cellIndex].innerText;\n\n    switch (coords.innerText) {\n      case 'Name':\n      case 'Position':\n      case 'Office':\n        return textA.localeCompare(textB);\n\n      case 'Age':\n        return +textA - +textB;\n\n      case 'Salary':\n        return trimmer(textA) - trimmer(textB);\n    }\n  });\n\n  if (!toggleSwitch) {\n    pers = pers.reverse();\n  }\n\n  toggleSwitch = !toggleSwitch;\n\n  tbody.append(...pers);\n});\n\nfunction trimmer(salary) {\n  return salary.replace(/\\D/g, '');\n}\n\nlet special;\n\ntbody.addEventListener('click', (e) => {\n  if (special) {\n    special.classList.remove('active');\n  }\n\n  special = e.target.parentElement;\n  e.target.parentElement.classList.add('active');\n});\n\ndocument.body.insertAdjacentHTML('beforeend', `\n  <form \n    action=\"/\" \n    method=\"get\" \n    class=\"new-employee-form\"\n  >\n    <label>\n      Name:\n      <input\n        name=\"name\"\n        type=\"text\"\n        data-qa=\"name\"\n        minlength=\"4\"\n        required\n      >\n    </label>\n    <label>\n      Position:\n      <input \n        name=\"position\" \n        type=\"text\" \n        data-qa=\"position\" \n        required\n      >\n    </label>\n    <label for=\"office\">\n      Office:\n      <select \n        id=\"office\" \n        data-qa=\"office\" \n        required\n      >\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>\n      Age:\n      <input \n        name=\"age\" \n        type=\"number\" \n        data-qa=\"age\" \n        required \n        min=\"18\" \n        max=\"90\"\n      >\n    </label>\n    <label>\n      Salary:\n      <input \n        name=\"salary\" \n        type=\"number\" \n        data-qa=\"salary\" \n        required\n      >\n    </label>\n    <button type=\"submit\"> Save to table </button>\n  </form>\n`);\n\nconst form = document.forms[0];\nconst select = form.querySelector('[data-qa=\"office\"]');\n\nconst createRow = (...arg) => {\n  const firstField = form.name.value;\n  const secondField = form.position.value;\n  const thirdField = select.value;\n  const fourthField = form.age.value;\n  const fifthField = parseFloat(form.salary.value);\n  const format = fifthField.toLocaleString('en-US');\n\n  tbody.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${firstField}</td>\n      <td>${secondField}</td>\n      <td>${thirdField}</td>\n      <td>${fourthField}</td>\n      <td>$${format}</td>\n    </tr>\n  `);\n};\n\nfunction showNotification(type, title, text) {\n  form.insertAdjacentHTML('afterend', `\n    <div class=\"notification\" data-qa=\"notification\">\n      <h1 class=\"title\">${title.toUpperCase()}</h1>\n      <p>${text}</p>\n    </div>\n  `);\n\n  const notification = document.querySelector('.notification');\n\n  notification.classList.add(type);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 3000);\n}\n\nform.name.addEventListener('change', e => {\n  if (!form.name.validity.valid || !form.name.value.trim()) {\n    showNotification(\n      'error',\n      'Incorrect name',\n      'Name length should be at least 4 letters'\n    );\n  }\n});\n\nform.age.addEventListener('change', e => {\n  if (!form.age.validity.valid) {\n    showNotification(\n      'error',\n      'Enter a correct age',\n      'Your age must be from 18 to 90 years'\n    );\n  }\n});\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  if (form.name.value.trim()) {\n    createRow();\n\n    showNotification(\n      'success',\n      'Successful!',\n      'New employee is successfully added to the table'\n    );\n  }\n\n  e.target.reset();\n});\n\nconst validScheme = {\n  name: (value) => value.length > 4,\n  age: (value) => value > 18 || value < 90,\n  salary: (value) => `$${value}`,\n};\n\ntbody.addEventListener('dblclick', (e) => {\n  const item = e.target;\n  const targetCell = item.cellIndex;\n  const prevValue = item.innerText;\n  const normValue = prevValue.replace(/[$,]/g, '');\n  const targetInput\n    = form.querySelectorAll('[data-qa]')[targetCell].cloneNode(true);\n\n  targetInput.classList.add('cell-input');\n  targetInput.value = normValue;\n  item.firstChild.replaceWith(targetInput);\n  targetInput.focus();\n\n  targetInput.addEventListener('keypress', eventKey => {\n    if (eventKey.key === 'Enter') {\n      targetInput.blur();\n    }\n  });\n\n  targetInput.addEventListener('blur', eventBlur => {\n    if (validScheme.name(targetInput.value)\n      || validScheme.age(targetInput.value)\n      || validScheme.salary(targetInput.value)\n      || !targetInput.value.trim()) {\n      item.removeChild(targetInput);\n\n      if (targetInput.value.toLowerCase() === targetInput.value.toUpperCase()\n        && targetInput.value.length > 2) {\n        const numb = +targetInput.value;\n\n        item.textContent = `$${numb.toLocaleString('en-US')}`;\n      } else {\n        item.textContent = targetInput.value;\n      }\n\n      return;\n    }\n\n    item.removeChild(targetInput);\n    item.textContent = prevValue;\n  });\n});\n"]}